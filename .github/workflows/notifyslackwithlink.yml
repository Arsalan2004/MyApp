name: Notify Slack with Firebase App Distribution Link

# Trigger the workflow on push events to the main branch
on:
  push:
    branches:
      - main

jobs:
  build-release:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      - name: Notify Slack on Build Start
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build started for QA."}' $SLACK_WEBHOOK_URL

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "21.7.1"

      - name: Generate service account file
        run: echo "${{ secrets.GAC_KEY }}" > $HOME/service-account.json

      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/service-account.json" >> $GITHUB_ENV

      - name: Upload to Firebase App Distribution
        if: success()
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          npm install -g firebase-tools

      - name: Notify Slack on Success
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          APK_LINK: ${{ env.APK_LINK }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build succeeded for QA. Download it from: '"$APK_LINK"'"}' $SLACK_WEBHOOK_URL

      - name: Notify Slack on Failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Retrieving Firebase download link failed for QA. Please check the logs for details."}' $SLACK_WEBHOOK_URL

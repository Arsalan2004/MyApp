name: Build Release

# Trigger the workflow on push events to the main branch
on:
  push:
    branches:
      - main

jobs:
  build-release:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      - name: Notify Slack on Build Start
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build started for QA."}' $SLACK_WEBHOOK_URL

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "21.7.1"

      - name: Install dependencies
        run: npm install

      - name: Build the release version
        run: npm run build

      - name: Archive release build
        uses: actions/upload-artifact@v4
        with:
          name: release-build
          path: ./android/app/build/outputs/apk/release/app-release.apk

      - name: Upload to Firebase App Distribution
        if: success()
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          npm install -g firebase-tools
          firebase_output=$(firebase appdistribution:distribute ./android/app/build/outputs/apk/release/app-release.apk --app $FIREBASE_APP_ID --token $FIREBASE_TOKEN --release-notes "New build is available" --groups "testers" --json)

      - name: Notify Slack on Build Success
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build Successfully build please check your email for download link."}' $SLACK_WEBHOOK_URL

      - name: Notify Slack on Build Failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build Failed"}' $SLACK_WEBHOOK_URL
